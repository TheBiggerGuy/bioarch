# Test Python code

version: 2.1

orbs:
  codecov: codecov/codecov@1.0.4

commands:
  setuppy:
    description: "Setup a working Python+Tox env"
    steps:
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tox.ini" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install tox

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tox.ini" }}

  tox:
    description: "Run this Tox environment"
    parameters:
      env:
        type: string
        default: "py37"
      args:
        type: string
        default: ""
    steps:
      - run:
          name: run Tox << parameters.env >>
          command: |
            . venv/bin/activate
            tox -e << parameters.env >> -- << parameters.args >>

jobs:
  build:
    docker:
      - image: circleci/python:3.7
    steps:
      - run: echo "Pass"

  test37:
    docker:
      - image: circleci/python:3.7

    working_directory: ~/repo

    steps:
      - checkout
      - setuppy
      # run tests
      - tox:
          env: py37
          args: "--junitxml=test-reports/junit.xml"
      # Upload code coverage
      - codecov/upload
      # Save test results
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

  test38:
    docker:
      - image: circleci/python:3.8-rc

    working_directory: ~/repo

    steps:
      - checkout
      - setuppy
      # run tests
      - tox:
          env: py38
          args: "--junitxml=test-reports/junit.xml"
      # Upload code coverage
      - codecov/upload
      # Save test results
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

  lint:
    docker:
      - image: circleci/python:3.7

    working_directory: ~/repo

    steps:
      - checkout
      - setuppy
        # run linters
      - tox:
          env: linters

workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      - test37
      - test38
      - lint:
          requires:
            - test37
